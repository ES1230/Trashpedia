<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="trashMapper">

	<!-- 최근 업데이트된 쓰레기 -->
	<select id="getRecentlyTrashList" resultType="trash">
	 	SELECT ROWNUM, TRASH_NO, TRASH_TITLE, TRASH_INFO, CHANGE_NAME
		FROM(
		SELECT T.TRASH_NO, TP.TRASH_TITLE, TP.TRASH_INFO, CHANGE_NAME
		FROM TRASH T
		LEFT JOIN TRASH_POST TP ON TP.TRASH_POST_NO = T.TRASH_POST_NO
		LEFT JOIN IMG_ATTACHMENT IM ON TP.TRASH_POST_NO = IM.REF_BNO
		ORDER BY TP.CREATE_DATE DESC
		)
        WHERE ROWNUM BETWEEN 1 AND 5
	</select>
	
	
	<!-- 인기 쓰레기  -->
	<select id ="getPopularList"  resultType="trash">
		SELECT *
		FROM(
		    SELECT *
		    FROM (
		        SELECT T.TRASH_NO, TSC.SUB_CATEGORY_NAME, IM.CHANGE_NAME, COUNT(*) AS TRASH_HITS
		        FROM TRASH T
		        LEFT JOIN TRASH_SUB_CATEGORY TSC ON T.SUB_CATEGORY_NO = TSC.SUB_CATEGORY_NO
		        LEFT JOIN TRASH_HITS TH ON T.TRASH_NO = TH.TRASH_NO
		        LEFT JOIN IMG_ATTACHMENT IM ON T.TRASH_NO = IM.REF_BNO
		        GROUP BY T.TRASH_NO, TSC.SUB_CATEGORY_NAME, IM.CHANGE_NAME
		        ORDER BY TRASH_HITS DESC        
		    )
		    WHERE ROWNUM BETWEEN 1 AND 5
		    ) 
		LEFT JOIN TRASH_POST TPO  ON TPO.TRASH_POST_NO = TRASH_NO
		WHERE STATUS='Y'
	</select>
	
	<!-- 비슷한 쓰레기  -->
	<select id="getSimilarList"  parameterType="trash" resultType="trash">
		SELECT TRASH_NO, TRASH_NO, TRASH_TITLE, TRASH_INFO, TRASH_EXTRAINFO, CHANGE_NAME
		FROM
		(
		SELECT T.TRASH_NO, TP.TRASH_POST_NO, TP.TRASH_TITLE, TP.TRASH_INFO, TP.TRASH_EXTRAINFO, IA.CHANGE_NAME
		FROM TRASH T
		LEFT JOIN TRASH_POST TP ON T.TRASH_POST_NO = TP.TRASH_POST_NO
		LEFT JOIN IMG_ATTACHMENT IA ON IA.REF_BNO = T.TRASH_NO
		LEFT JOIN TRASH_SUB_CATEGORY TSC ON TSC.SUB_CATEGORY_NO = T.SUB_CATEGORY_NO
		LEFT JOIN TRASH_BIG_CATEGORY TBC ON TBC.BIG_CATEGORY_NO = TSC.BIG_CATEGORY_NO
	    WHERE TSC.SUB_CATEGORY_NO = #{subCategoryNo} AND IA.IMG_TYPE = 2 AND IA.IMG_LEVEL = 1 AND  T.TRASH_NO != #{trashNo} AND T.STATUS = 'Y'
	    )
		WHERE ROWNUM BETWEEN 1 AND 4
	</select>
	
	<select id="bigCategory" resultType="trash">
		 SELECT  TSC.SUB_CATEGORY_NO, TSC.BIG_CATEGORY_NO
		 FROM TRASH_SUB_CATEGORY TSC
		 LEFT JOIN TRASH T ON T.SUB_CATEGORY_NO = TSC.SUB_CATEGORY_NO
		 WHERE T.TRASH_NO = #{trashNo} 
	</select>
	
	<!-- 쓰레기 상세페이지  -->
	<select id ="trashDetail" parameterType="int" resultType="trash">
		SELECT T.TRASH_NO, TSC.SUB_CATEGORY_NAME, TBC.BIG_CATEGORY_NAME, TSC.SUB_CATEGORY_NO, TBC.BIG_CATEGORY_NO,
		T.STATUS, TP.TRASH_POST_NO, TP.TRASH_TITLE, TP.TRASH_INFO,TP.TRASH_EXTRAINFO, IA.CHANGE_NAME, T.TRASH_POST_NO
		FROM TRASH T
		LEFT JOIN TRASH_POST TP ON T.TRASH_POST_NO = TP.TRASH_POST_NO
		LEFT JOIN IMG_ATTACHMENT IA ON IA.REF_BNO = T.TRASH_NO
		LEFT JOIN TRASH_SUB_CATEGORY TSC ON TSC.SUB_CATEGORY_NO = T.SUB_CATEGORY_NO
		LEFT JOIN TRASH_BIG_CATEGORY TBC ON TBC.BIG_CATEGORY_NO = TSC.BIG_CATEGORY_NO
		WHERE T.TRASH_NO = #{trashNo} AND IA.IMG_TYPE = 2 AND IA.REF_BNO = #{trashNo} AND IA.STATUS = 'Y'
	</select>
	
	<select id = "getAllBigCategoryList" resultType="TrashBigCategory">
		SELECT *
        FROM TRASH_BIG_CATEGORY
	</select>
	
	<!-- 쓰레기 전체리스트  -->
	<select id = "getAllTrashList" resultType="trash">
	    SELECT T.TRASH_NO, T.TRASH_POST_NO, USER_NO, T.SUB_CATEGORY_NO,T.STATUS, TP.TRASH_TITLE, IA.CHANGE_NAME
	    FROM TRASH T
	    LEFT JOIN TRASH_POST TP ON T.TRASH_POST_NO = TP.TRASH_POST_NO
	    LEFT JOIN IMG_ATTACHMENT IA ON IA.REF_BNO = T.TRASH_POST_NO
	    WHERE T.STATUS='Y'
	    <if test="keyword !=null and keyword != ''">
		    AND TRASH_TITLE LIKE  '%${keyword}%' 
	    </if>
	</select>
	
	<select id ="getAllSubCategoryList" resultType="TrashSubCategory">
		SELECT *
		FROM TRASH_SUB_CATEGORY TSC
		LEFT JOIN TRASH_BIG_CATEGORY TBC ON TSC.BIG_CATEGORY_NO = TBC.BIG_CATEGORY_NO
	</select>
	
	<select id ="getSubCategoryList" resultType="TrashSubCategory">
		SELECT *
		FROM TRASH_SUB_CATEGORY TSC
		LEFT JOIN TRASH_BIG_CATEGORY TBC ON TSC.BIG_CATEGORY_NO = TBC.BIG_CATEGORY_NO
		WHERE TBC.BIG_CATEGORY_NO = #{bigCategoryNo}
	</select>
	
	<insert id="writeTrashPost" parameterType="trashPost">
	    INSERT INTO TRASH_POST
		VALUES (SEQ_TPNO.NEXTVAL, #{trashTitle}, #{trashInfo}, #{trashExtraInfo}, SYSDATE, SYSDATE, DEFAULT)
	</insert>
	
	<select id="getTrashPostNo" resultType="trashPost">
		SELECT *
		FROM TRASH_POST
		WHERE TRASH_TITLE = #{trashTitle}
	</select>
	
	<insert id="writeTrash" parameterType="trash">
		INSERT INTO TRASH
		VALUES(SEQ_TNO.NEXTVAL, #{trashPostNo}, #{userNo}, #{subCategoryNo}, DEFAULT)
	</insert>
	
	<select id="getTrashNo" resultType="trash">
		SELECT *
		FROM TRASH
		WHERE TRASH_POST_NO = #{trashPostNo}
	</select>
	
	<update id="deleteTrash" parameterType="int">
		UPDATE TRASH_POST
		SET STATUS = 'N'
		WHERE TRASH_POST_NO = #{trashPostNo}
	</update>

	<update id="undeleteTrash" parameterType="int">
		UPDATE TRASH_POST
		SET STATUS = 'Y'
		WHERE TRASH_POST_NO = #{trashPostNo}
	</update>
	
	<select id="getTrash" parameterType="trash" resultType="trash">
		SELECT *
		FROM TRASH
		WHERE TRASH_NO = #{trashNo}
	</select>
	
	<select id="getTrashPost" parameterType="int" resultType="trashPost">
		SELECT *
		FROM TRASH_POST
		WHERE TRASH_POST_NO = #{trashPostNo}
	</select>
	
	<update id="updateTrash" parameterType="trash">
		UPDATE TRASH
		SET 
		TRASH_POST_NO = #{trashPostNo},
		USER_NO = #{userNo},
		SUB_CATEGORY_NO = #{subCategoryNo}
		WHERE TRASH_NO = #{trashNo}
	</update>

	<update id="updateTrashPost" parameterType="trashPost">
		UPDATE TRASH_POST
		SET
		TRASH_TITLE = #{trashTitle},
		TRASH_INFO = #{trashInfo},
		TRASH_EXTRAINFO = #{trashExtraInfo},
		MODIFY_DATE = SYSDATE
		WHERE TRASH_POST_NO = #{trashPostNo}
	</update>
	
	<insert id="writeRequest" parameterType="request">
		INSERT INTO REQUEST
		VALUES(SEQ_RQNO.NEXTVAL, #{trashNo}, #{userNo}, #{requestTitle}, #{requestContent}, SYSDATE, DEFAULT, NULL, NULL)
	</insert>
	
	<select id="getRequest" parameterType="int" resultType="request">
		SELECT *
		FROM REQUEST R
		JOIN MEMBER M ON R.USER_NO = M.USER_NO 
		WHERE REQUEST_NO = #{requestNo}
	</select>
	
	<update id="processingRequest" parameterType="request">
		UPDATE REQUEST
		SET
		PROCESSING_CONTENT = #{processingContent},
		PROCESSING_STATUS = 'Y',
		PROCESSING_DATE = SYSDATE
		WHERE REQUEST_NO = #{requestNo}
	</update>
	
	<select id="getHits" parameterType="trashHits" resultType="trashHits">
		SELECT *
		FROM TRASH_HITS
		WHERE TRASH_NO = #{trashNo} AND USER_IP = ${userIp} AND TRUNC(CREATE_DATE) = TRUNC(SYSDATE)
	</select>
	
	<insert id="upCount">
		INSERT INTO TRASH_HITS
		VALUES(SEQ_THNO.NEXTVAL, '${userIp}', #{trashNo}, SYSDATE)
	</insert>
</mapper>