<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="boardMapper">

	<!-- 상세페이지 -->
	<select id="boardDetail" parameterType="int" resultType="board">
		SELECT P.POST_NO, P.TITLE, P.CONTENT, P.CREATE_DATE, P.MODIFY_DATE, B.USER_NO, 
			B.BOARD_NO, SC.SUB_CATEGORY_NO, SC.BIG_CATEGORY_NO, USER_NAME,
			(SELECT COUNT(*) FROM HITS WHERE BOARD_NO = #{boardNo})AS hits
		FROM BOARD B
		LEFT JOIN POST P ON (P.POST_NO = B.POST_NO)
		LEFT JOIN SUB_CATEGORY SC ON B.SUB_CATEGORY_NO = SC.SUB_CATEGORY_NO 
		LEFT JOIN MEMBER M ON (B.USER_NO = M.USER_NO)
		WHERE B.BOARD_NO = #{boardNo}
	</select>
	
	<!-- 페이징, 목록, 필터 -->
	<select id="boardList" resultType="board">
		SELECT P.POST_NO, P.TITLE, P.CONTENT, P.CREATE_DATE, P.MODIFY_DATE, B.USER_NO, 
	        B.BOARD_NO, IA.CHANGE_NAME, SC.SUB_CATEGORY_NO, SC.BIG_CATEGORY_NO, USER_NAME, TH.hits
		FROM BOARD B
		LEFT JOIN POST P ON (P.POST_NO = B.POST_NO)
		LEFT JOIN SUB_CATEGORY SC ON B.SUB_CATEGORY_NO = SC.SUB_CATEGORY_NO 
		LEFT JOIN MEMBER M ON (B.USER_NO = M.USER_NO)
		LEFT JOIN IMG_ATTACHMENT IA ON IA.REF_BNO = B.BOARD_NO
		LEFT JOIN ( SELECT BOARD_NO, COUNT(*) AS hits
		            FROM HITS
		            GROUP BY BOARD_NO) TH ON (B.BOARD_NO = TH.BOARD_NO)
		WHERE SC.SUB_CATEGORY_NO = #{subCategoryNo} AND P.STATUS = 'Y' AND B.STATUS = 'Y'
		<choose>
			<when test="searchSelect == 'boardNo'">
				AND B.BOARD_NO LIKE '%' || #{searchValue} || '%'
			</when>
			<when test="searchSelect == 'title'">
				AND P.TITLE LIKE '%' || #{searchValue} || '%'
			</when>
			<when test="searchSelect == 'content'">
				AND P.CONTENT LIKE '%' || #{searchValue} || '%'
			</when>
		</choose>
		<choose>
			<when test="filter == 'createDate'">
				ORDER BY P.CREATE_DATE DESC
			</when>
			<when test="filter == 'hits'">
				ORDER BY TH.hits ASC
			</when>
			<otherwise>
				ORDER BY P.POST_NO DESC
			</otherwise>
		</choose>
	</select>
	
	<!-- 대분류 카테고리 -->
	<select id="allBigCategory" resultType="bigCategory">
		SELECT *
		FROM BIG_CATEGORY
	</select>

	<!-- 소분류 카테고리 -->
	<select id="allSubCategory" resultType="subCategory">
		SELECT *
		FROM SUB_CATEGORY
	</select>
	
	<select id="getSubCategoryNo" parameterType="post" resultType="subCategory">
		SELECT B.SUB_CATEGORY_NO
		FROM BOARD B
		LEFT JOIN POST P ON B.POST_NO = P.POST_NO
		LEFT JOIN SUB_CATEGORY SC ON SC.SUB_CATEGORY_NO = B.SUB_CATEGORY_NO 
		WHERE B.POST_NO = #{postNo}
	</select>
	
	<select id="getBoard" parameterType="int" resultType="board">
		SELECT *
		FROM BOARD
		WHERE POST_NO = #{postNo}
	</select>
	
	<update id="deleteBoard" parameterType="int">
		UPDATE BOARD
		SET STATUS = 'N'
		WHERE BOARD_NO = #{boardNo}
	</update>
	
	<update id="deletePost" parameterType="int">
		UPDATE POST
		SET STATUS = 'N'
		WHERE POST_NO = #{postNo}
	</update>
	
		<!-- 게시글 상세조회 - 이미지 -->
	<select id="getImageUrl" parameterType="map" resultType="imgAttachment">
		SELECT *
		FROM IMG_ATTACHMENT IA
		LEFT JOIN BOARD B ON B.BOARD_NO = IA.REF_BNO
		WHERE REF_BNO = #{boardNo} AND IMG_TYPE = #{imgType} AND IA.STATUS='Y'
	</select>

	<!-- 게시글 상세조회 - 첨부파일 -->
	<select id="getDetailAttach" parameterType="map" resultType="Attachment">
		SELECT *
		FROM ATTACHMENT A
		JOIN BOARD ON BOARD_NO = REF_BNO
		WHERE REF_BNO = #{boardNo} AND FILE_TYPE = #{fileType} AND A.STATUS='Y'
	</select>

	<!-- 카테고리 글목록 리스트 -->
	<select id="allBoardList" resultType="board">
		SELECT BOARD_NO, TITLE, USER_NAME, CREATE_DATE, SUB_CATEGORY_NO
		FROM (
		SELECT B.BOARD_NO, P.TITLE, M.USER_NAME, P.CREATE_DATE, B.SUB_CATEGORY_NO,
		ROW_NUMBER() OVER(PARTITION BY B.SUB_CATEGORY_NO
		ORDER BY P.CREATE_DATE DESC) AS RN
		FROM BOARD B
		LEFT JOIN POST P ON B.POST_NO = P.POST_NO
		LEFT JOIN MEMBER M ON B.USER_NO = M.USER_NO
		LEFT JOIN SUB_CATEGORY SC ON B.SUB_CATEGORY_NO = SC.SUB_CATEGORY_NO
		)
		WHERE
		RN <![CDATA[<=]]> 4
		ORDER BY SUB_CATEGORY_NO, CREATE_DATE DESC
	</select>
	
	<!-- 카테고리 가지고오기 -->
	<select id="getSubCategory" parameterType="subCategory" resultType='subCategory'>
		SELECT SUB_CATEGORY_NO, S.BIG_CATEGORY_NO,
		SUB_CATEGORY_NAME, BIG_CATEGORY_NAME
		FROM SUB_CATEGORY S
		JOIN
		BIG_CATEGORY B ON S.BIG_CATEGORY_NO = B.BIG_CATEGORY_NO
		WHERE
		S.SUB_CATEGORY_NO = #{subCategoryNo}
	</select>

	<!-- 게시글 등록(POST) -->
	<insert id="createPost" parameterType="post" useGeneratedKeys="true">
		<selectKey keyProperty="postNo" resultType="int" order="BEFORE">
			SELECT SEQ_POSTNO.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO POST
		VALUES (#{postNo}, #{title}, #{content}, SYSDATE,
		SYSDATE, 'Y')
	</insert>

	<!-- 게시글 등록(BOARD) -->
	<insert id="createBoard" parameterType="board" useGeneratedKeys="true">
		<selectKey keyProperty="boardNo" resultType="int" order="BEFORE">
			SELECT SEQ_BNO.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO BOARD
		VALUES (#{boardNo}, #{postNo}, #{userNo},
		#{subCategoryNo},
		'Y')
	</insert>

	<!-- 첨부파일등록 -->
	<insert id="insertAttachment">
		INSERT INTO ATTACHMENT
		VALUES
		(SEQ_ATTNO.NEXTVAL,#{refBno},#{originName},#{changeName},#{fileType},SYSDATE,SYSDATE,'Y')
	</insert>

	<!-- 이미지등록 -->
	<insert id="insertImgAttachment">
		INSERT INTO IMG_ATTACHMENT
		VALUES (SEQ_IATTNO.NEXTVAL,
		#{refBno},#{originName},#{changeName},1,#{imgType},SYSDATE,SYSDATE,'Y')
	</insert>

	<!-- 게시글 수정 - 기존글조회 -->
	<select id="getPost" parameterType="int" resultType="post">
		SELECT
		P.POST_NO, P.TITLE, P.CONTENT, P.CREATE_DATE, P.MODIFY_DATE,
		B.USER_NO,B.BOARD_NO, USER_NAME
		FROM POST P
		LEFT JOIN BOARD B ON
		P.POST_NO = B.POST_NO
		LEFT JOIN MEMBER M ON M.USER_NO = B.USER_NO
		WHERE
		P.POST_NO = #{postNo}
	</select>

	<!-- 게시글 수정 -->
	<update id="updatePost" parameterType="post">
		UPDATE POST
		SET TITLE =
		#{title},
		CONTENT = #{content},
		MODIFY_DATE = SYSDATE
		WHERE POST_NO =
		#{postNo}
	</update>

	<!--첨부파일삭제 -->
    <delete id="deleteAttach">
        DELETE FROM ATTACHMENT
        WHERE REF_BNO = #{boardNo} AND FILE_TYPE = 1
    </delete>
    
    <!--이미지삭제  -->
    <delete id="deleteImage">
        DELETE FROM IMG_ATTACHMENT
        WHERE REF_BNO = #{boardNo} AND IMG_TYPE = 1
    </delete>
    
    <delete id="deleteImage2">
        DELETE FROM IMG_ATTACHMENT
        WHERE REF_BNO = #{boardNo} AND IMG_TYPE = 2
    </delete>

	<!-- 파일삭제-파일리스트출력 -->
	<select id="fileNameList" resultType="string">
		SELECT
		'/resources/attachFile/file/' || CHANGE_NAME
		FROM ATTACHMENT
	</select>

	<!-- 파일삭제-이미지리스트출력 -->
	<select id="imageNameList" resultType="string">
		SELECT
		'/resources/attachFile/image/' || CHANGE_NAME
		FROM IMG_ATTACHMENT
	</select>

	<select id="boardCount" resultType="int">
		SELECT COUNT(*)
		FROM BOARD B
		LEFT JOIN POST P ON P.POST_NO = B.POST_NO
		WHERE B.SUB_CATEGORY_NO = #{subCategoryNo} AND P.STATUS = 'Y'
		<choose>
			<when test="searchSelect == 'boardNo'">
				AND B.BOARD_NO = #{searchValue}
			</when>
			<when test="searchSelect == 'title'">
				AND P.TITLE LIKE '%' || #{searchValue} || '%'
			</when>
			<when test="searchSelect == 'content'">
				AND P.CONTENT LIKE '%' || #{searchValue} || '%'
			</when>
		</choose>
	</select>

	<!-- 사용자 조회 이력 체크 -->
	<select id="checkUserViewed" parameterType="map" resultType="int">
	    SELECT COUNT(*) FROM HITS WHERE BOARD_NO = #{boardNo} AND USER_NO = #{userNo}
	</select>
	
	<!-- 조회수 업데이트 -->
	<update id="updateHits" parameterType="int">
	    UPDATE HITS SET HITS_NO = HITS_NO + 1 WHERE BOARD_NO = #{boardNo}
	</update>
	
	<!-- 대댓글 등록 -->
	<insert id="insertNC" parameterType="nestedComment">
		INSERT INTO
		NESTED_COMMENT(NESTED_COMMENT_NO, COMMENT_NO, USER_NO, "CONTENT",
		CREATE_DATE, MODIFY_DATE, STATUS)
		VALUES (SEQ_NCNO.NEXTVAL,
		#{commentNo}, #{userNo}, #{content}, SYSDATE, SYSDATE, DEFAULT)
	</insert>
	<!-- 대댓글 조회 -->
	<select id="viewNC" parameterType="int" resultType="nestedComment">
		SELECT NC.NESTED_COMMENT_NO, NC.COMMENT_NO, NC.USER_NO,
		NC."CONTENT", NC.CREATE_DATE, NC.MODIFY_DATE, NC.STATUS, M.USER_NAME
		FROM NESTED_COMMENT NC
		LEFT JOIN MEMBER M ON M.USER_NO = NC.USER_NO
		WHERE NC.COMMENT_NO = #{commentNo}
	</select>
	<!-- 대댓글 삭제 -->
	<!-- <update id="deleteNC" parameterType="int" > -->
	<!-- UPDATE NESTED_COMMENT -->
	<!-- SET STATUS = 'N' -->
	<!-- WHERE NESTED_COMMENT_NO = #{nCommentNo} -->
	<!-- </update> -->

	<delete id="deleteNC" parameterType="int">
		DELETE
		FROM NESTED_COMMENT
		WHERE NESTED_COMMENT_NO = #{nCommentNo}
	</delete>
	<!-- 무료 나눔 페이지 관련 쿼리문 -->

	<!-- 무료 페이지 정보 -->
	<select id="getFreeTrashList" resultType="Post" parameterType="java.util.Map">
		SELECT * FROM (
		SELECT
		P.POST_NO,
		TITLE,
		CONTENT,
		P.CREATE_DATE,
		P.MODIFY_DATE,
		USER_NO,
		BOARD_NO,
		SC.SUB_CATEGORY_NO,
		SC.BIG_CATEGORY_NO,
		IA.CHANGE_NAME,
		ROWNUM AS RN
		FROM
		POST P
		LEFT JOIN
		BOARD B ON P.POST_NO = B.POST_NO
		LEFT JOIN IMG_ATTACHMENT IA ON
		B.BOARD_NO = IA.REF_BNO
		LEFT JOIN SUB_CATEGORY SC ON B.SUB_CATEGORY_NO
		= SC.SUB_CATEGORY_NO
		WHERE
		B.SUB_CATEGORY_NO = #{subCategoryNo}
		AND
		IMG_LEVEL = 1
		AND P.STATUS = 'Y'
		ORDER BY
		P.POST_NO DESC
		)
		WHERE RN BETWEEN
		#{startRow} AND #{endRow}
	</select>

	<!-- 무료 페이지 총 정보 -->
	<select id="getFreeTrashTotalList" resultType="Post" parameterType="int">
		SELECT * FROM (
		SELECT
		P.POST_NO,
		TITLE,
		CONTENT,
		P.CREATE_DATE,
		P.MODIFY_DATE,
		USER_NO,
		BOARD_NO,
		SC.SUB_CATEGORY_NO,
		SC.BIG_CATEGORY_NO,
		IA.CHANGE_NAME,
		ROWNUM AS RN
		FROM
		POST P
		LEFT JOIN BOARD B ON P.POST_NO = B.POST_NO
		LEFT JOIN IMG_ATTACHMENT IA ON B.BOARD_NO = IA.REF_BNO
		LEFT JOIN SUB_CATEGORY SC ON B.SUB_CATEGORY_NO = SC.SUB_CATEGORY_NO
		WHERE
		B.SUB_CATEGORY_NO = #{subCategoryNo}
		AND IMG_LEVEL = 1
		AND P.STATUS = 'Y'
		ORDER BY
		P.POST_NO DESC)
	</select>

	<select id="getPostByTitle" resultType="Post">
		SELECT POST_NO, TITLE,
		CONTENT, P.CREATE_DATE, P.MODIFY_DATE,
		USER_NO, BOARD_NO,
		SC.SUB_CATEGORY_NO, SC.BIG_CATEGORY_NO, IA.CHANGE_NAME
		FROM
		POST P
		LEFT
		JOIN BOARD B USING (POST_NO)
		LEFT JOIN IMG_ATTACHMENT IA ON
		(B.BOARD_NO
		= IA.REF_BNO)
		LEFT JOIN SUB_CATEGORY SC ON
		B.SUB_CATEGORY_NO =
		SC.SUB_CATEGORY_NO
		WHERE P.TITLE =
		#{title}
		AND
		IMG_LEVEL = 1
		AND P.STATUS
		= 'Y'
		ORDER BY POST_NO DESC
	</select>

	<!-- 게시글 상세조회 -->
	<select id="getFreeTrashDetail" parameterType="int" resultType="post">
		SELECT P.POST_NO, P.TITLE, P.CONTENT, P.CREATE_DATE,
		P.MODIFY_DATE, B.USER_NO,
		B.BOARD_NO, SC.SUB_CATEGORY_NO,
		SC.BIG_CATEGORY_NO,
		(SELECT COUNT(*)FROM HITS WHERE BOARD_NO = ( SELECT
		BOARD_NO FROM BOARD WHERE
		POST_NO = #{postNo} ))AS HITS_NO
		FROM POST P
		LEFT JOIN BOARD B ON
		P.POST_NO = B.POST_NO
		LEFT JOIN SUB_CATEGORY SC ON
		B.SUB_CATEGORY_NO =
		SC.SUB_CATEGORY_NO
		WHERE P.POST_NO = #{postNo}
	</select>

	<!-- 조회일 조회 -->
	<select id="getHitDate" parameterType="hits" resultType="hits">
		SELECT *
		FROM HITS
		WHERE BOARD_NO = #{boardNo} AND USER_IP = '${userIp}' AND TRUNC(CREATE_DATE) = TRUNC(SYSDATE)
	</select>

<!-- 	게시글 조회수 증가 -->
	<insert id="increaseCount" parameterType="hits">
		INSERT INTO HITS
		VALUES(SEQ_HITNO.NEXTVAL, #{boardNo}, #{userIp}, SYSDATE) 
	</insert>
</mapper>