<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="adminMapper">
	<select id="allMemberCount" resultType="int">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE GRADE_NO != 1 AND STATUS = 'Y'
	</select>
	<select id="allBoardCount" resultType="int">
		SELECT COUNT(*)
		FROM BOARD
		WHERE STATUS = 'Y'
	</select>
	<select id="newMemberCount" resultType="int">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE TRUNC(CREATE_DATE) = TRUNC(SYSDATE) AND STATUS = 'Y'
	</select>
	<select id="oldMemberCount" resultType="int">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE TRUNC(CREATE_DATE) = TRUNC(SYSDATE - 1) AND STATUS = 'Y'
	</select>
	<select id="newBoardCount" resultType="int">
		SELECT COUNT(*)
		FROM POST
		WHERE TRUNC(CREATE_DATE) = TRUNC(SYSDATE) AND STATUS = 'Y'
	</select>
	<select id="oldBoardCount" resultType="int">
		SELECT COUNT(*)
		FROM POST
		WHERE TRUNC(CREATE_DATE) = TRUNC(SYSDATE - 1) AND STATUS = 'Y'
	</select>
	<select id="getMemberChartsData" resultType="member">
		SELECT dates.orderDay, NVL(COUNT(M.CREATE_DATE), 0) AS countMember
		FROM (
		    SELECT TO_CHAR(TRUNC(SYSDATE) - LEVEL + 1, 'YYYY-MM-DD') AS orderDay
		    FROM DUAL
		    CONNECT BY LEVEL &lt;= 7
		) dates
		LEFT JOIN MEMBER M ON TO_CHAR(M.CREATE_DATE, 'YYYY-MM-DD') = dates.orderDay
		GROUP BY dates.orderDay
		ORDER BY dates.orderDay
	</select>
	<select id="getBoardChartsData" resultType="board">
		SELECT dates.orderDay, NVL(COUNT(P.CREATE_DATE), 0) AS countBoard
		FROM (
		    SELECT TO_CHAR(TRUNC(SYSDATE) - LEVEL + 1, 'YYYY-MM-DD') AS orderDay
		    FROM DUAL
		    CONNECT BY LEVEL &lt;= 7
		) dates
		LEFT JOIN POST P ON TO_CHAR(P.CREATE_DATE, 'YYYY-MM-DD') = dates.orderDay
		GROUP BY dates.orderDay
		ORDER BY dates.orderDay
	</select>
	<select id="getCommentChartsData" resultType="comment">
		SELECT dates.orderDay, NVL(COUNT(C.CREATE_DATE), 0) AS countComment
		FROM (
		    SELECT TO_CHAR(TRUNC(SYSDATE) - LEVEL + 1, 'YYYY-MM-DD') AS orderDay
		    FROM DUAL
		    CONNECT BY LEVEL &lt;= 7
		) dates
		LEFT JOIN "COMMENT" C ON TO_CHAR(C.CREATE_DATE, 'YYYY-MM-DD') = dates.orderDay
		GROUP BY dates.orderDay
		ORDER BY dates.orderDay
	</select>
	<select id="getNCChartsData" resultType="nestedComment">
		SELECT dates.orderDay, NVL(COUNT(NC.CREATE_DATE), 0) AS countComment
		FROM (
		    SELECT TO_CHAR(TRUNC(SYSDATE) - LEVEL + 1, 'YYYY-MM-DD') AS orderDay
		    FROM DUAL
		    CONNECT BY LEVEL &lt;= 7
		) dates
		LEFT JOIN NESTED_COMMENT NC ON TO_CHAR(NC.CREATE_DATE, 'YYYY-MM-DD') = dates.orderDay
		GROUP BY dates.orderDay
		ORDER BY dates.orderDay
	</select>
	
	<select id="getMemberList" resultType="member">
		SELECT USER_NO, USER_EMAIL, USER_NAME, USER_NICKNAME
		FROM MEMBER
			<if test="searchSelect == 'userNo'">
				WHERE TO_CHAR(USER_NO) LIKE '%' || #{searchValue} || '%'
			</if>
			<if test="searchSelect == 'userEmail'">
				WHERE USER_EMAIL LIKE '%' || #{searchValue} || '%'
			</if>
			<if test="searchSelect == 'userName'">
				WHERE USER_NAME LIKE '%' || #{searchValue} || '%'
			</if>
			<if test="searchSelect == 'userNickname'">
				WHERE USER_NICKNAME LIKE '%' || #{searchValue} || '%'
			</if>
		ORDER BY
			<choose>
				<when test="sort == 'userNo'">
					USER_NO
				</when>
				<when test="sort == 'userEmail'">
					USER_EMAIL
				</when>
				<when test="sort == 'userName'">
					USER_NAME
				</when>
				<when test="sort == 'userNickname'">
					USER_NICKNAME
				</when>
			</choose>
	</select>
	<select id="getCountAllMember" resultType="int">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE STATUS = 'Y'
	</select>
	<select id="getMemberDetail" resultType="member">
		SELECT *
		FROM MEMBER M
		LEFT JOIN ROLE R ON M.ROLE_NO = R.ROLE_NO
		LEFT JOIN USER_GRADE UG ON UG.GRADE_NO = M.GRADE_NO
		LEFT JOIN POINT P ON M.USER_NO = P.USER_NO
		WHERE M.USER_NO = #{userNo}
	</select>
	<select id="memberCountBoard" resultType="int">
		SELECT COUNT(*)
		FROM BOARD
		WHERE USER_NO = #{userNo}
	</select>
	<select id="memberCountComment" resultType="int">
		SELECT COUNT(*)
		FROM (
		    SELECT B.BOARD_NO, COMMENT_NO, P.TITLE, SUB_CATEGORY_NAME, BIG_CATEGORY_NAME, NULL AS NESTED_COMMENT_NO
		    FROM "COMMENT" C
		    LEFT JOIN BOARD B ON C.BOARD_NO = B.BOARD_NO
		    LEFT JOIN POST P ON P.POST_NO = B.POST_NO
		    LEFT JOIN SUB_CATEGORY SC ON SC.SUB_CATEGORY_NO = B.SUB_CATEGORY_NO
		    LEFT JOIN BIG_CATEGORY BC ON BC.BIG_CATEGORY_NO = SC.BIG_CATEGORY_NO
		    WHERE C.USER_NO = #{userNo}
		    UNION
		    SELECT B.BOARD_NO, NC.COMMENT_NO, P.TITLE, SUB_CATEGORY_NAME, BIG_CATEGORY_NAME, NESTED_COMMENT_NO
		    FROM NESTED_COMMENT NC
		    LEFT JOIN "COMMENT" C ON C.COMMENT_NO = NC.COMMENT_NO
		    LEFT JOIN BOARD B ON C.BOARD_NO = B.BOARD_NO
		    LEFT JOIN POST P ON P.POST_NO = B.POST_NO
		    LEFT JOIN SUB_CATEGORY SC ON SC.SUB_CATEGORY_NO = B.SUB_CATEGORY_NO
		    LEFT JOIN BIG_CATEGORY BC ON BC.BIG_CATEGORY_NO = SC.BIG_CATEGORY_NO
		    WHERE NC.USER_NO = #{userNo}
		) RESULT
	</select>
	<select id="getMemberBoardList" resultType="board">
		SELECT P.TITLE, BC.BIG_CATEGORY_NAME, SC.SUB_CATEGORY_NAME, B.BOARD_NO, P.CREATE_DATE
		FROM BOARD B
		LEFT JOIN POST P ON B.POST_NO = P.POST_NO
		LEFT JOIN SUB_CATEGORY SC ON B.SUB_CATEGORY_NO = SC.SUB_CATEGORY_NO
		LEFT JOIN BIG_CATEGORY BC ON SC.BIG_CATEGORY_NO = BC.BIG_CATEGORY_NO
		WHERE B.USER_NO = #{userNo}
		<if test="searchSelect == 'boardNo'">
				AND TO_CHAR(B.BOARD_NO) LIKE '%' || #{searchValue} || '%'
			</if>
			<if test="searchSelect == 'title'">
				AND P.TITLE LIKE '%' || #{searchValue} || '%'
			</if>
			<if test="searchSelect == 'content'">
				AND P.CONTENT LIKE '%' || #{searchValue} || '%'
			</if>
		ORDER BY
			<choose>
				<when test="sort == 'boardNo'">
					B.BOARD_NO
				</when>
				<when test="sort == 'bigCategoryName'">
					BC.BIG_CATEGORY_NAME, P.CREATE_DATE
				</when>
				<when test="sort == 'subCategoryName'">
					SC.SUB_CATEGORY_NAME, P.CREATE_DATE
				</when>
				<when test="sort == 'title'">
					P.TITLE, P.CREATE_DATE
				</when>
			</choose>
	</select>
	<select id="getMemberBoardDetail" resultType="board">
		SELECT TITLE, CONTENT, CREATE_DATE, MODIFY_DATE
		FROM BOARD B
		LEFT JOIN POST P ON B.POST_NO = P.POST_NO
		WHERE B.BOARD_NO = #{boardNo}
	</select>
	<select id="getMemberCommentList" resultType="board">
		SELECT BOARD_NO, TITLE, SUB_CATEGORY_NAME, BIG_CATEGORY_NAME
		FROM (
		    SELECT DISTINCT B.BOARD_NO, P.TITLE, SUB_CATEGORY_NAME, BIG_CATEGORY_NAME
		    FROM "COMMENT" C
		    LEFT JOIN BOARD B ON C.BOARD_NO = B.BOARD_NO
		    LEFT JOIN POST P ON P.POST_NO = B.POST_NO
		    LEFT JOIN SUB_CATEGORY SC ON SC.SUB_CATEGORY_NO = B.SUB_CATEGORY_NO
		    LEFT JOIN BIG_CATEGORY BC ON BC.BIG_CATEGORY_NO = SC.BIG_CATEGORY_NO
		    WHERE C.USER_NO = #{userNo}
		    <if test="searchSelect == 'boardNo'">
			    AND TO_CHAR(B.BOARD_NO) LIKE '%' || #{searchValue} || '%'
			</if>
			<if test="searchSelect == 'content'">
			    AND C.CONTENT LIKE '%' || #{searchValue} || '%'
			</if>
		    UNION
		    SELECT DISTINCT B.BOARD_NO, P.TITLE, SUB_CATEGORY_NAME, BIG_CATEGORY_NAME
		    FROM NESTED_COMMENT NC
		    LEFT JOIN "COMMENT" C ON C.COMMENT_NO = NC.COMMENT_NO
		    LEFT JOIN BOARD B ON C.BOARD_NO = B.BOARD_NO
		    LEFT JOIN POST P ON P.POST_NO = B.POST_NO
		    LEFT JOIN SUB_CATEGORY SC ON SC.SUB_CATEGORY_NO = B.SUB_CATEGORY_NO
		    LEFT JOIN BIG_CATEGORY BC ON BC.BIG_CATEGORY_NO = SC.BIG_CATEGORY_NO
		    WHERE NC.USER_NO = #{userNo}
		    <if test="searchSelect == 'boardNo'">
			    AND B.BOARD_NO LIKE '%' || #{searchValue} || '%'
			</if>
			<if test="searchSelect == 'content'">
			    AND CN.CONTENT LIKE '%' || #{searchValue} || '%'
			</if>
		) RESULT
		ORDER BY
		<choose>
		    <when test="sort == 'boardNo'">
		        BOARD_NO
		    </when>
		    <when test="sort == 'bigCategoryName'">
		        BIG_CATEGORY_NAME
		    </when>
		    <when test="sort == 'subCategoryName'">
		        SUB_CATEGORY_NAME
		    </when>
		    <when test="sort == 'title'">
		        TITLE
		    </when>
		</choose>
	</select>
	<select id="getCommentDetail" resultType="board">
		SELECT CONTENT, CREATE_DATE
		FROM (
		    SELECT DISTINCT C.CONTENT, C.CREATE_DATE
		    FROM "COMMENT" C
		    LEFT JOIN BOARD B ON C.BOARD_NO = B.BOARD_NO
		    LEFT JOIN POST P ON P.POST_NO = B.POST_NO
		    LEFT JOIN SUB_CATEGORY SC ON SC.SUB_CATEGORY_NO = B.SUB_CATEGORY_NO
		    LEFT JOIN BIG_CATEGORY BC ON BC.BIG_CATEGORY_NO = SC.BIG_CATEGORY_NO
		    WHERE C.USER_NO = #{userNo} AND B.BOARD_NO = #{boardNo}
		    UNION
		    SELECT NC.CONTENT, NC.CREATE_DATE
		    FROM NESTED_COMMENT NC
		    LEFT JOIN "COMMENT" C ON C.COMMENT_NO = NC.COMMENT_NO
		    LEFT JOIN BOARD B ON C.BOARD_NO = B.BOARD_NO
		    LEFT JOIN POST P ON P.POST_NO = B.POST_NO
		    LEFT JOIN SUB_CATEGORY SC ON SC.SUB_CATEGORY_NO = B.SUB_CATEGORY_NO
		    LEFT JOIN BIG_CATEGORY BC ON BC.BIG_CATEGORY_NO = SC.BIG_CATEGORY_NO
		    WHERE NC.USER_NO = #{userNo} and B.BOARD_NO = #{boardNo}
		) RESULT
		ORDER BY CREATE_DATE
	</select>
	<select id="getMemberPointList" resultType="pointHistory">
		SELECT *
		FROM POINT_HISTORY
		WHERE USER_NO = #{userNo}
		<if test="searchSelect == 'pointNo'">
		    AND POINT_NO LIKE '%' || #{searchValue} || '%'
		</if>
		<if test="searchSelect == 'pointContent'">
		    AND POINT_CONTENT LIKE '%' || #{searchValue} || '%'
		</if>
		ORDER BY
		<choose>
		    <when test="sort == 'pointNo'">
		        POINT_NO
		    </when>
		    <when test="sort == 'pointContent'">
		        POINT_CONTENT
		    </when>
		    <when test="sort == 'amount'">
		        AMOUNT
		    </when>
		    <when test="sort == 'pointDate'">
		        POINT_DATE
		    </when>
		</choose>
	</select>
	<select id="memberPointCount" resultType="int">
		SELECT COUNT(*)
		FROM POINT_HISTORY
		WHERE USER_NO = #{userNo}
		<if test="searchSelect == 'pointNo'">
		    AND POINT_NO LIKE '%' || #{searchValue} || '%'
		</if>
		<if test="searchSelect == 'pointContent'">
		    AND POINT_CONTENT LIKE '%' || #{searchValue} || '%'
		</if>
	</select>
	<select id="getMemberReportList" parameterType="int" resultType="report">
		SELECT *
		FROM REPORT
		WHERE USER_NO = #{userNo}
		<if test="searchSelect == 'reportNo'">
		    AND REPORT_NO LIKE '%' || #{searchValue} || '%'
		</if>
		<if test="searchSelect == 'reportContent'">
		    AND REPORT_CONTENT LIKE '%' || #{searchValue} || '%'
		</if>
		ORDER BY
		<choose>
		    <when test="sort == 'reportNo'">
		        REPORT_NO
		    </when>
		    <when test="sort == 'reportType'">
		        REPORT_TYPE
		    </when>
		    <when test="sort == 'reportContent'">
		        REPORT_CONTENT
		    </when>
		    <when test="sort == 'processingContent'">
		        PROCESSING_CONTENT
		    </when>
		    <when test="sort == 'reportDate'">
		        REPORT_DATE
		    </when>
		    <when test="sort == 'status'">
		        STATUS
		    </when>
		</choose>
	</select>
	<select id="memberReportCount" resultType="int">
		SELECT COUNT(*)
		FROM REPORT
		WHERE USER_NO = #{userNo}
		<if test="searchSelect == 'reportNo'">
		    AND REPORT_NO LIKE '%' || #{searchValue} || '%'
		</if>
		<if test="searchSelect == 'reportContent'">
		    AND REPORT_CONTENT LIKE '%' || #{searchValue} || '%'
		</if>
	</select>
	<select id="BigCategoryList" resultType="bigCategory">
		SELECT *
		FROM BIG_CATEGORY
	</select>
	<select id="getSubCategoryList" resultType="subCategory">
		SELECT *
		FROM SUB_CATEGORY
		WHERE BIG_CATEGORY_NO = #{bigCategoryNo}
	</select>
	<select id="loadBoardListData" resultType="Board">
		SELECT B.BOARD_NO, SC.SUB_CATEGORY_NAME, P.TITLE, COUNT(H.HITS_NO) AS hit, P.CREATE_DATE, P.MODIFY_DATE, P.STATUS
		FROM BOARD B
		LEFT JOIN POST P ON P.POST_NO = B.POST_NO
		LEFT JOIN SUB_CATEGORY SC ON B.SUB_CATEGORY_NO = SC.SUB_CATEGORY_NO
		LEFT JOIN HITS H ON B.BOARD_NO = H.BOARD_NO
		<if test="searchSelect == 'boardNo'">
			WHERE TO_CHAR(B.BOARD_NO) LIKE '%' || #{searchValue} || '%'
		</if>
		<if test="searchSelect == 'subCategoryName'">
			WHERE SC.SUB_CATEGORY_NAME LIKE '%' || #{searchValue} || '%'
		</if>
		<if test="searchSelect == 'content'">
			WHERE P.CONTENT LIKE '%' || #{searchValue} || '%'
		</if>
		GROUP BY B.BOARD_NO, SC.SUB_CATEGORY_NAME, P.TITLE, P.CREATE_DATE, P.MODIFY_DATE, P.STATUS
		ORDER BY
			<choose>
				<when test="sort == 'boardNo'">
					B.BOARD_NO
				</when>
				<when test="sort == 'subCategoryName'">
					SC.SUB_CATEGORY_NAME
				</when>
				<when test="sort == 'title'">
					P.TITLE
				</when>
				<when test="sort == 'hit'">
					hit
				</when>
			</choose>
	</select>
	<select id="boardListCount" resultType="int">
		SELECT COUNT(*)
		FROM BOARD B
		<if test="searchSelect == 'boardNo'">
			WHERE TO_CHAR(B.BOARD_NO) LIKE '%' || #{searchValue} || '%'
		</if>
		<if test="searchSelect == 'subCategoryName'">
			WHERE SC.SUB_CATEGORY_NAME LIKE '%' || #{searchValue} || '%'
		</if>
		<if test="searchSelect == 'content'">
			WHERE P.CONTENT LIKE '%' || #{searchValue} || '%'
		</if>
	</select>
	<select id="loadCommentListData" resultType="comment">
		SELECT COMMENT_NO, NESTED_COMMENT_NO, BOARD_NO, SUB_CATEGORY_NAME, TITLE, CONTENT, CREATE_DATE, MODIFY_DATE, STATUS
		FROM
		(SELECT C.COMMENT_NO, B.BOARD_NO, SC.SUB_CATEGORY_NAME, P.TITLE, C.CONTENT, C.CREATE_DATE, C.MODIFY_DATE, C.STATUS, NULL AS NESTED_COMMENT_NO
		FROM "COMMENT" C
		LEFT JOIN BOARD B ON B.BOARD_NO = C.BOARD_NO
		LEFT JOIN POST P ON P.POST_NO = B.POST_NO
		LEFT JOIN SUB_CATEGORY SC ON B.SUB_CATEGORY_NO = SC.SUB_CATEGORY_NO
		<if test="searchSelect == 'boardNo'">
			WHERE TO_CHAR(B.BOARD_NO) LIKE '%' || #{searchValue} || '%'
		</if>
		<if test="searchSelect == 'subCategoryName'">
			WHERE SC.SUB_CATEGORY_NAME LIKE '%' || #{searchValue} || '%'
		</if>
		<if test="searchSelect == 'title'">
			WHERE P.TITLE LIKE '%' || #{searchValue} || '%'
		</if>
		<if test="searchSelect == 'content'">
			WHERE C.CONTENT LIKE '%' || #{searchValue} || '%'
		</if>
		UNION
		SELECT C.COMMENT_NO,B.BOARD_NO, SC.SUB_CATEGORY_NAME, P.TITLE, NC.CONTENT, NC.CREATE_DATE, NC.MODIFY_DATE, NC.STATUS, NC.NESTED_COMMENT_NO
		FROM NESTED_COMMENT NC
		LEFT JOIN "COMMENT" C ON NC.COMMENT_NO = C.COMMENT_NO
		LEFT JOIN BOARD B ON B.BOARD_NO = C.BOARD_NO
		LEFT JOIN POST P ON P.POST_NO = B.POST_NO
		LEFT JOIN SUB_CATEGORY SC ON B.SUB_CATEGORY_NO = SC.SUB_CATEGORY_NO)
		<if test="searchSelect == 'boardNo'">
			WHERE TO_CHAR(B.BOARD_NO) LIKE '%' || #{searchValue} || '%'
		</if>
		<if test="searchSelect == 'subCategoryName'">
			WHERE SC.SUB_CATEGORY_NAME LIKE '%' || #{searchValue} || '%'
		</if>
		<if test="searchSelect == 'title'">
			WHERE P.TITLE LIKE '%' || #{searchValue} || '%'
		</if>
		<if test="searchSelect == 'content'">
			WHERE NC.CONTENT LIKE '%' || #{searchValue} || '%'
		</if>
		ORDER BY
		<choose>
			<when test="sort == 'boardNo'">
				BOARD_NO
			</when>
			<when test="sort == 'subCategoryName'">
				SUB_CATEGORY_NAME
			</when>
			<when test="sort == 'title'">
				TITLE
			</when>
		</choose>
	</select>
	<select id="commentListCount" resultType="int">
		SELECT SUM(a)
		FROM (SELECT COUNT(*) AS a
		FROM "COMMENT" C
		LEFT JOIN BOARD B ON C.BOARD_NO = B.BOARD_NO
		LEFT JOIN POST P ON B.POST_NO = B.POST_NO
		LEFT JOIN SUB_CATEGORY SC ON B.SUB_CATEGORY_NO = SC.SUB_CATEGORY_NO
		<if test="searchSelect == 'boardNo'">
			WHERE TO_CHAR(B.BOARD_NO) LIKE '%' || #{searchValue} || '%'
		</if>
		<if test="searchSelect == 'subCategoryName'">
			WHERE SC.SUB_CATEGORY_NAME LIKE '%' || #{searchValue} || '%'
		</if>
		<if test="searchSelect == 'title'">
			WHERE P.TITLE LIKE '%' || #{searchValue} || '%'
		</if>
		<if test="searchSelect == 'content'">
			WHERE C.CONTENT LIKE '%' || #{searchValue} || '%'
		</if>
		UNION
		SELECT COUNT(*) AS a
		FROM NESTED_COMMENT NC
		LEFT JOIN "COMMENT" C ON NC.COMMENT_NO = C.COMMENT_NO
		LEFT JOIN BOARD B ON C.BOARD_NO = B.BOARD_NO
		LEFT JOIN POST P ON B.POST_NO = B.POST_NO
		LEFT JOIN SUB_CATEGORY SC ON B.SUB_CATEGORY_NO = SC.SUB_CATEGORY_NO
		<if test="searchSelect == 'boardNo'">
			WHERE TO_CHAR(B.BOARD_NO) LIKE '%' || #{searchValue} || '%'
		</if>
		<if test="searchSelect == 'subCategoryName'">
			WHERE SC.SUB_CATEGORY_NAME LIKE '%' || #{searchValue} || '%'
		</if>
		<if test="searchSelect == 'title'">
			WHERE P.TITLE LIKE '%' || #{searchValue} || '%'
		</if>
		<if test="searchSelect == 'content'">
			WHERE C.CONTENT LIKE '%' || #{searchValue} || '%'
		</if>)
	</select>
	<select id="getTrashList" resultType="trash">
		SELECT T.TRASH_NO, TBC.BIG_CATEGORY_NAME,TSC.SUB_CATEGORY_NAME, TP.TRASH_TITLE, TP.CREATE_DATE, TP.MODIFY_DATE
		FROM TRASH T
		LEFT JOIN TRASH_SUB_CATEGORY TSC ON T.SUB_CATEGORY_NO = TSC.SUB_CATEGORY_NO 
		LEFT JOIN TRASH_BIG_CATEGORY TBC ON TSC.BIG_CATEGORY_NO = TBC.BIG_CATEGORY_NO
		LEFT JOIN TRASH_POST TP ON T.TRASH_POST_NO = TP.TRASH_POST_NO
	</select>
	<select id="trashCount" resultType="int">
		SELECT COUNT(*)
		FROM TRASH
	</select>
	<select id="loadSuggestionListData" resultType="suggestion">
		SELECT *
		FROM SUGGESTION
	</select>
	<select id="suggestionCount" resultType="int">
		SELECT COUNT(*)
		FROM SUGGESTION
	</select>
	<select id="loadRequestListData" resultType="request">
		SELECT *
		FROM REQUEST
	</select>
	<select id="requestCount" resultType="int">
		SELECT COUNT(*)
		FROM REQUEST
	</select>
</mapper>